{"remainingRequest":"D:\\Desktop\\GuaCyBlog (1)\\GuaCyBlog\\GuaCyBlog-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\GuaCyBlog (1)\\GuaCyBlog\\GuaCyBlog-Vue\\src\\components\\TagInput.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Desktop\\GuaCyBlog (1)\\GuaCyBlog\\GuaCyBlog-Vue\\src\\components\\TagInput.vue","mtime":1601021919939},{"path":"D:\\Desktop\\GuaCyBlog (1)\\GuaCyBlog\\GuaCyBlog-Vue\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\GuaCyBlog (1)\\GuaCyBlog\\GuaCyBlog-Vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Desktop\\GuaCyBlog (1)\\GuaCyBlog\\GuaCyBlog-Vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Desktop\\GuaCyBlog (1)\\GuaCyBlog\\GuaCyBlog-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\GuaCyBlog (1)\\GuaCyBlog\\GuaCyBlog-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLXRhZyArIC5lbC10YWcgewogbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KLmJ1dHRvbi1uZXctdGFnIHsKIG1hcmdpbi1sZWZ0OiAxMHB4OwogaGVpZ2h0OiAzMnB4OwogbGluZS1oZWlnaHQ6IDMwcHg7CiBwYWRkaW5nLXRvcDogMDsKIHBhZGRpbmctYm90dG9tOiAwOwp9Ci5pbnB1dC1uZXctdGFnIHsKIHdpZHRoOiAwcHg7CiBtYXJnaW4tbGVmdDogMTBweDsKfQo="},{"version":3,"sources":["TagInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TagInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div>  \r\n  <el-tag\r\n   :key=\"tag\"\r\n   v-for=\"tag in dynamicTags\"\r\n   closable\r\n   :disable-transitions=\"false\"\r\n   @close=\"handleClose(tag)\">\r\n   {{tag}}\r\n  </el-tag>\r\n  <el-col>\r\n  <el-input\r\n   class=\"input-new-tag\"\r\n   v-if=\"inputVisible\"\r\n   v-model=\"inputValue\"\r\n   ref=\"saveTagInput\"\r\n   size=\"small\"\r\n   @keyup.enter.native=\"handleInputConfirm\"\r\n   @blur=\"handleInputConfirm\"\r\n   style=\"width:90px\"\r\n  >\r\n   </el-input>\r\n     <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">\r\n       <i class=\"el-icon-folder-add\"></i>\r\n    </el-button>\r\n  </el-col>\r\n</div>\r\n</template>\r\n\r\n<style>\r\n .el-tag + .el-tag {\r\n  margin-left: 10px;\r\n }\r\n .button-new-tag {\r\n  margin-left: 10px;\r\n  height: 32px;\r\n  line-height: 30px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n }\r\n .input-new-tag {\r\n  width: 0px;\r\n  margin-left: 10px;\r\n }\r\n</style>\r\n \r\n<script>\r\n export default {\r\n  data() {\r\n   return {\r\n    dynamicTags: [],\r\n    inputVisible: false,\r\n    inputValue: ''\r\n   };\r\n  },\r\n  methods: {\r\n   handleClose(tag) {\r\n    this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\r\n   },\r\n \r\n   showInput() {\r\n    this.inputVisible = true;\r\n    this.$nextTick(_ => {\r\n     this.$refs.saveTagInput.$refs.input.focus();\r\n    });\r\n   },\r\n \r\n   handleInputConfirm() {\r\n    let inputValue = this.inputValue;\r\n    if (inputValue) {\r\n     this.dynamicTags.push(inputValue);\r\n    }\r\n    this.inputVisible = false;\r\n    this.inputValue = '';\r\n   }\r\n  }\r\n }\r\n</script>"]}]}